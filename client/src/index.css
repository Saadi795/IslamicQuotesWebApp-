@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 96%;

  --foreground: 160 45% 12%;

  --border: 0 0% 88%;

  --card: 0 0% 98%;

  --card-foreground: 160 45% 12%;

  --card-border: 0 0% 94%;

  --sidebar: 0 0% 96%;

  --sidebar-foreground: 160 45% 12%;

  --sidebar-border: 0 0% 91%;

  --sidebar-primary: 160 68% 15%;

  --sidebar-primary-foreground: 45 65% 88%;

  --sidebar-accent: 150 15% 85%;

  --sidebar-accent-foreground: 160 45% 18%;

  --sidebar-ring: 160 40% 35%;

  --popover: 0 0% 94%;

  --popover-foreground: 160 45% 12%;

  --popover-border: 0 0% 89%;

  --primary: 160 68% 15%;

  --primary-foreground: 45 65% 88%;

  --secondary: 150 8% 88%;

  --secondary-foreground: 160 45% 16%;

  --muted: 150 8% 90%;

  --muted-foreground: 160 25% 35%;

  --accent: 150 15% 87%;

  --accent-foreground: 160 45% 18%;

  --destructive: 0 65% 28%;

  --destructive-foreground: 0 60% 96%;

  --input: 0 0% 75%;
  --ring: 160 40% 35%;
  --chart-1: 160 68% 22%;
  --chart-2: 150 45% 35%;
  --chart-3: 45 75% 48%;
  --chart-4: 140 35% 42%;
  --chart-5: 155 50% 28%;

  --font-sans: Inter, Poppins, sans-serif;
  --font-serif: Playfair Display, Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 1px 2px 0px hsl(160 20% 10% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(160 20% 10% / 0.08);
  --shadow-sm: 0px 2px 4px 0px hsl(160 20% 10% / 0.06), 0px 1px 2px -1px hsl(160 20% 10% / 0.04);
  --shadow: 0px 4px 6px 0px hsl(160 20% 10% / 0.08), 0px 2px 4px -1px hsl(160 20% 10% / 0.05);
  --shadow-md: 0px 6px 12px 0px hsl(160 20% 10% / 0.10), 0px 2px 6px -2px hsl(160 20% 10% / 0.06);
  --shadow-lg: 0px 10px 20px 0px hsl(160 20% 10% / 0.12), 0px 4px 8px -2px hsl(160 20% 10% / 0.08);
  --shadow-xl: 0px 20px 30px 0px hsl(160 20% 10% / 0.14), 0px 8px 12px -4px hsl(160 20% 10% / 0.10);
  --shadow-2xl: 0px 30px 50px 0px hsl(160 20% 10% / 0.18);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 160 8% 8%;

  --foreground: 150 10% 92%;

  --border: 160 6% 18%;

  --card: 160 6% 10%;

  --card-foreground: 150 10% 92%;

  --card-border: 160 6% 14%;

  --sidebar: 160 6% 12%;

  --sidebar-foreground: 150 10% 92%;

  --sidebar-border: 160 6% 16%;

  --sidebar-primary: 160 68% 25%;

  --sidebar-primary-foreground: 45 65% 92%;

  --sidebar-accent: 160 12% 18%;

  --sidebar-accent-foreground: 150 15% 88%;

  --sidebar-ring: 160 45% 45%;

  --popover: 160 6% 14%;

  --popover-foreground: 150 10% 92%;

  --popover-border: 160 6% 18%;

  --primary: 160 68% 25%;

  --primary-foreground: 45 65% 92%;

  --secondary: 160 8% 20%;

  --secondary-foreground: 150 10% 88%;

  --muted: 160 8% 16%;

  --muted-foreground: 150 10% 70%;

  --accent: 160 12% 18%;

  --accent-foreground: 150 15% 88%;

  --destructive: 0 65% 28%;

  --destructive-foreground: 0 60% 96%;

  --input: 160 8% 35%;
  --ring: 160 45% 45%;
  --chart-1: 160 68% 65%;
  --chart-2: 150 50% 60%;
  --chart-3: 45 80% 65%;
  --chart-4: 140 40% 58%;
  --chart-5: 155 55% 55%;

  --shadow-2xs: 0px 1px 2px 0px hsl(160 20% 0% / 0.30);
  --shadow-xs: 0px 1px 3px 0px hsl(160 20% 0% / 0.35);
  --shadow-sm: 0px 2px 4px 0px hsl(160 20% 0% / 0.32), 0px 1px 2px -1px hsl(160 20% 0% / 0.28);
  --shadow: 0px 4px 6px 0px hsl(160 20% 0% / 0.38), 0px 2px 4px -1px hsl(160 20% 0% / 0.30);
  --shadow-md: 0px 6px 12px 0px hsl(160 20% 0% / 0.42), 0px 2px 6px -2px hsl(160 20% 0% / 0.35);
  --shadow-lg: 0px 10px 20px 0px hsl(160 20% 0% / 0.48), 0px 4px 8px -2px hsl(160 20% 0% / 0.40);
  --shadow-xl: 0px 20px 30px 0px hsl(160 20% 0% / 0.52), 0px 8px 12px -4px hsl(160 20% 0% / 0.45);
  --shadow-2xl: 0px 30px 50px 0px hsl(160 20% 0% / 0.60);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased text-foreground;
    background: #fdf6e3;
    background-attachment: fixed;
    transition: background 0.3s ease;
  }

  .dark body {
    background: #121212;
    background-attachment: fixed;
  }
}

@keyframes quantumEntrance {
  0% { 
    transform: translateY(50px) rotateX(45deg);
    opacity: 0;
  }
  60% { 
    transform: translateY(-10px) rotateX(0);
    opacity: 1;
  }
  100% { 
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes glow360 {
  0% {
    box-shadow: 
      0 0 5px rgba(212, 175, 55, 0.3),
      0 0 10px rgba(212, 175, 55, 0.2),
      0 0 15px rgba(212, 175, 55, 0.1),
      inset 0 0 5px rgba(212, 175, 55, 0.1);
  }
  50% {
    box-shadow: 
      0 0 20px rgba(212, 175, 55, 0.6),
      0 0 30px rgba(212, 175, 55, 0.4),
      0 0 40px rgba(212, 175, 55, 0.2),
      inset 0 0 10px rgba(212, 175, 55, 0.2);
  }
  100% {
    box-shadow: 
      0 0 5px rgba(212, 175, 55, 0.3),
      0 0 10px rgba(212, 175, 55, 0.2),
      0 0 15px rgba(212, 175, 55, 0.1),
      inset 0 0 5px rgba(212, 175, 55, 0.1);
  }
}

@keyframes glow360Dark {
  0% {
    box-shadow: 
      0 0 5px rgba(212, 175, 55, 0.3),
      0 0 10px rgba(212, 175, 55, 0.2),
      0 0 15px rgba(212, 175, 55, 0.1),
      inset 0 0 5px rgba(212, 175, 55, 0.1);
  }
  50% {
    box-shadow: 
      0 0 20px rgba(212, 175, 55, 0.6),
      0 0 30px rgba(212, 175, 55, 0.4),
      0 0 40px rgba(212, 175, 55, 0.2),
      inset 0 0 10px rgba(212, 175, 55, 0.2);
  }
  100% {
    box-shadow: 
      0 0 5px rgba(212, 175, 55, 0.3),
      0 0 10px rgba(212, 175, 55, 0.2),
      0 0 15px rgba(212, 175, 55, 0.1),
      inset 0 0 5px rgba(212, 175, 55, 0.1);
  }
}

@keyframes gradientFlow {
  0% {
    border-top-color: #d4af37;
    border-bottom-color: #c49a2e;
  }
  50% {
    border-top-color: #c49a2e;
    border-bottom-color: #d4af37;
  }
  100% {
    border-top-color: #d4af37;
    border-bottom-color: #c49a2e;
  }
}

.quote-box-pattern {
  position: relative;
  overflow: visible;
  background: linear-gradient(135deg, #a8e6cf 0%, #fdf6e3 100%) !important;
  border-radius: 20px !important;
  border: 2px solid #d4af37 !important;
  transition: background 0.3s ease, border-color 0.3s ease;
  animation: glow360 3s ease-in-out infinite;
}

.dark .quote-box-pattern {
  background: linear-gradient(135deg, #1e1e1e 0%, #252525 100%) !important;
  border: 2px solid #d4af37 !important;
  animation: glow360Dark 3s ease-in-out infinite;
}

.quote-box-pattern::before {
  content: '"';
  position: absolute;
  top: 20px;
  left: 20px;
  font-size: 120px;
  color: rgba(212, 175, 55, 0.08);
  font-family: 'Poppins', serif;
  line-height: 1;
  z-index: 0;
  pointer-events: none;
  font-weight: 700;
  transition: color 0.3s ease;
}

.dark .quote-box-pattern::before {
  color: rgba(212, 175, 55, 0.12);
}

.quote-box-pattern::after {
  content: '';
  position: absolute;
  inset: 0;
  background-image: 
    repeating-linear-gradient(45deg, transparent, transparent 8px, #d4af37 8px, #d4af37 16px),
    repeating-linear-gradient(-45deg, transparent, transparent 8px, #d4af37 8px, #d4af37 16px);
  border-radius: 20px;
  z-index: -1;
  pointer-events: none;
  opacity: 0.01;
  transition: opacity 0.3s ease;
}

.dark .quote-box-pattern::after {
  opacity: 0;
}

/* Quote text colors */
.quote-text {
  color: #1b4332;
}

.dark .quote-text {
  color: #e6e6e6;
}

.quote-source {
  color: #b8922e;
}

.dark .quote-source {
  color: #d4af37;
}

.quote-reference {
  color: #c49a2e;
}

.dark .quote-reference {
  color: #d4af37;
}

/* Bookmark cards styling */
.bookmark-card {
  background: linear-gradient(135deg, #a8e6cf 0%, #fdf6e3 100%) !important;
  border-radius: 20px !important;
}

.dark .bookmark-card {
  background: linear-gradient(135deg, #1e1e1e 0%, #252525 100%) !important;
}

.bookmark-quote-text {
  color: #1b4332;
}

.dark .bookmark-quote-text {
  color: #e6e6e6;
}

.bookmark-source-text {
  color: #b8922e;
}

.dark .bookmark-source-text {
  color: #d4af37;
}

.bookmark-reference-text {
  color: #c49a2e;
}

.dark .bookmark-reference-text {
  color: #d4af37;
}

/* Bookmark card button icons */
.bookmark-card button svg {
  color: #d4af37 !important;
}

.bookmark-card button:hover svg {
  color: #e4bf47 !important;
}

.dark .bookmark-card button svg {
  color: #d4af37 !important;
}

.dark .bookmark-card button:hover svg {
  color: #e4bf47 !important;
}

/* Toast notification styling */
[data-sonner-toast],
[data-radix-toast-viewport] > * {
  background: white !important;
  border-color: #e5e5e5 !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15) !important;
}

[data-sonner-toast] [data-title],
[data-radix-toast-viewport] [data-title],
.group[data-state] .text-sm {
  color: #1b4332 !important;
}

/* Toast notification dark mode styling */
.dark [data-sonner-toast],
.dark [data-radix-toast-viewport] > * {
  background: #1e1e1e !important;
  border-color: #2a2a2a !important;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4) !important;
}

.dark [data-sonner-toast] [data-title],
.dark [data-radix-toast-viewport] [data-title],
.dark .group[data-state] .text-sm {
  color: #e6e6e6 !important;
}


/* Top Navigation Bar */
.top-nav {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.98);
  backdrop-filter: blur(20px);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
  border: none;
  z-index: 1000;
  min-height: 64px;
  display: flex;
  align-items: center;
  transition: background 0.3s ease, box-shadow 0.3s ease;
}

.top-nav h1,
.top-nav p {
  color: #1b4332 !important;
}

.dark .top-nav {
  background: rgba(18, 18, 18, 0.98);
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

.dark .top-nav h1,
.dark .top-nav p {
  color: #e6e6e6 !important;
}

.top-nav::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 20%;
  right: 20%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    #d4af37 50%,
    transparent 100%
  );
  box-shadow: 0 0 10px rgba(212, 175, 55, 0.3);
  animation: borderPulse 3s ease-in-out infinite;
}

/* Bottom Navigation Bar */
.bottom-nav {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.98);
  backdrop-filter: blur(20px);
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.08);
  border: none;
  z-index: 1000;
  min-height: 64px;
  display: flex;
  align-items: center;
  padding-bottom: env(safe-area-inset-bottom, 0);
  transition: background 0.3s ease, box-shadow 0.3s ease;
}

.dark .bottom-nav {
  background: rgba(18, 18, 18, 0.98);
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.5);
}

.bottom-nav::before {
  content: '';
  position: absolute;
  top: 0;
  left: 20%;
  right: 20%;
  height: 2px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    #d4af37 50%,
    transparent 100%
  );
  box-shadow: 0 0 10px rgba(212, 175, 55, 0.3);
  animation: borderPulse 3s ease-in-out infinite;
}

@keyframes borderPulse {
  0%, 100% {
    opacity: 0.8;
    box-shadow: 0 0 8px rgba(212, 175, 55, 0.2);
  }
  50% {
    opacity: 1;
    box-shadow: 0 0 12px rgba(212, 175, 55, 0.4);
  }
}

/* Navigation button modern styles - rounded, shadowed, smooth transitions */
.nav-btn-green {
  background: #1b4332 !important;
  color: white !important;
  border: none !important;
  border-radius: 10px !important;
  box-shadow: 0 4px 12px rgba(27, 67, 50, 0.3), 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.dark .nav-btn-green {
  background: #1b4332 !important;
  color: #f0f4f8 !important;
  box-shadow: 0 4px 12px rgba(27, 67, 50, 0.3), 0 2px 4px rgba(0, 0, 0, 0.1);
}

.nav-btn-green svg {
  color: #d4af37 !important;
}

.dark .nav-btn-green svg {
  color: #d4af37 !important;
}

.nav-btn-green:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 16px rgba(27, 67, 50, 0.4), 0 3px 6px rgba(0, 0, 0, 0.15);
}

.dark .nav-btn-green:hover {
  box-shadow: 0 6px 16px rgba(27, 67, 50, 0.4), 0 3px 6px rgba(0, 0, 0, 0.15);
}

.nav-btn-green:active {
  transform: translateY(0px);
}

.nav-btn-blue {
  background: #007BFF !important;
  color: white !important;
  border: none !important;
  border-radius: 10px !important;
  box-shadow: 0 4px 12px rgba(0, 123, 255, 0.3), 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.dark .nav-btn-blue {
  background: #1b4332 !important;
  color: white !important;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  backdrop-filter: none;
}

.dark .nav-btn-blue svg {
  color: #d4af37 !important;
}

.nav-btn-blue:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 16px rgba(0, 123, 255, 0.4), 0 3px 6px rgba(0, 0, 0, 0.15);
}

.dark .nav-btn-blue:hover {
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

.nav-btn-blue:active {
  transform: translateY(0px);
}

.nav-btn-icon-blue,
.nav-btn-icon-blue-light,
.nav-btn-icon-purple,
.nav-btn-icon-teal {
  background: transparent !important;
  color: #d4af37 !important;
  border: none !important;
  border-radius: 10px !important;
  box-shadow: none !important;
  transition: transform 0.2s ease, color 0.2s ease;
}

.dark .nav-btn-icon-blue,
.dark .nav-btn-icon-blue-light,
.dark .nav-btn-icon-purple,
.dark .nav-btn-icon-teal {
  color: #d4af37 !important;
}

.nav-btn-icon-blue:hover,
.nav-btn-icon-blue-light:hover,
.nav-btn-icon-purple:hover,
.nav-btn-icon-teal:hover {
  transform: scale(1.1);
  color: #e4bf47 !important;
}

.dark .nav-btn-icon-blue:hover,
.dark .nav-btn-icon-blue-light:hover,
.dark .nav-btn-icon-purple:hover,
.dark .nav-btn-icon-teal:hover {
  color: #e4bf47 !important;
}

.nav-btn-icon-blue:active,
.nav-btn-icon-blue-light:active,
.nav-btn-icon-purple:active,
.nav-btn-icon-teal:active {
  transform: scale(1.0);
}

.theme-toggle-btn {
  background: transparent !important;
  color: #d4af37 !important;
  border: none !important;
  border-radius: 10px !important;
  box-shadow: none !important;
  transition: transform 0.2s ease, color 0.2s ease;
}

.dark .theme-toggle-btn {
  color: #e2e8f0 !important;
}

.theme-toggle-btn:hover {
  transform: scale(1.1);
  color: #e4bf47 !important;
}

.dark .theme-toggle-btn:hover {
  color: #f1f5f9 !important;
}

.theme-toggle-btn:active {
  transform: scale(1.0);
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}